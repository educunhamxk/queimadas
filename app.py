import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pycaret
from pycaret.regression import *
from sklearn.pipeline import Pipeline
import numpy as np
import gdown

#configura√ß√£o da p√°gina
st.set_page_config(page_title="Desmatamento", page_icon="üå≥", layout="centered", initial_sidebar_state="collapsed")

#defini√ß√£o do tema
st.markdown("""
<style>
body {
    color: #fff;
    background-color: #4F4F4F;
}
</style>
    """, unsafe_allow_html=True)

#t√≠tulo
st.title("Como ser√£o os n√∫meros de desmatamento agora na gest√£o do Lula em 2023? E como seria se o Bolsonaro tivesse sido eleito?")

#exibir imagem tema do lula
st.image("desmatamento.png")

#texto
st.markdown("H√° muita expectativa com a gest√£o do Lula no que se diz respeito ao desmatamento, j√° que este foi um dos principais alvos da campanha de Lula contra Bolsonaro nos debates eleitorais. O objetivo do projeto √© entender os n√∫meros gerais do desmatamento da Amaz√¥nia Legal ao longo dos √∫ltimos anos, entender qual foi impacto do governo Bolsonaro nestes n√∫meros e prever tanto como ser√° o desmatamento para 2023 na gest√£o de Lula, como prever caso o Bolsonaro tivesse sido eleito.")

#1¬∫ Bloco************************************************************************************************************************
st.subheader("An√°lises Preliminares")

st.markdown("O primeiro passo do estudo √© entender os n√∫meros gerais de incremento de desmatamento, analisando por estado, ano e governo. Os dados consideram incrementos a partir de 2008.")

#impor do arquivo
df = pd.read_csv("desmatamento.csv")
#df['date'] = pd.to_datetime(df['date'])
#st.write(df.columns)

#Marca√ß√£o do governo de acordo com o ano
def marcar_governo(year):
    if year < 2011:
        return 'Lula'
    elif 2011 <= year <= 2014:
        return 'Dilma1'
    elif 2015 <= year < 2017:
        return 'Dilma2'
    elif 2017 <= year <= 2018:
        return 'Temer'
    elif 2018 <= year <= 2022:
        return 'Bolsonaro'
    else:
        return 'Desconhecido' 
    
df['governo'] = df['year'].apply(marcar_governo)


# Ordenar os dados por estado, munic√≠pio, geocode_ibge e ano
df = df.sort_values(['state', 'municipality', 'geocode_ibge', 'year'])

# Calcular a diferen√ßa ano a ano no desmatamento por cada combina√ß√£o √∫nica de estado, munic√≠pio e geocode_ibge
df['delta_areakm'] = df.groupby(['state', 'municipality', 'geocode_ibge'])['areakm'].diff()

# Preencher NA/NaN valores com 0s (isso ocorrer√° para o primeiro ano de cada combina√ß√£o √∫nica, pois n√£o h√° ano anterior para comparar)
df['delta_areakm'] = df['delta_areakm'].fillna(0)

df_grafico1 = df.copy()

#divindo a p√°gina em dois blocos
col1, col2, col3 = st.columns(3)

#Filtro de Estado------------------------------------
#criando um widget de sele√ß√£o para selecionar o estado
estados = df_grafico1['state'].unique()
#estados = [estados.title() for estado in estados] 
with col1:
    estado_selecionado = st.selectbox('Selecione um estado:', options=['Todos'] + list(estados))

    #filtrando os dados pelo estado selecionado
    if estado_selecionado != 'Todos':
        df_grafico1 = df_grafico1[df_grafico1['state'] == estado_selecionado]

with col2:

    #Filtro de Ano------------------------------------
    #criando um widget de sele√ß√£o para selecionar o estado
    anos = df_grafico1['year'].unique()
    ano_selecionado = st.selectbox('Selecione um ano:', options=['Todos'] + list(anos))

    #filtrando os dados pelo ano selecionado
    if ano_selecionado != 'Todos':
        df_grafico1 = df_grafico1[df_grafico1['year'] == ano_selecionado]

with col3:

    #Filtro de Ano------------------------------------
    #criando um widget de sele√ß√£o para selecionar o estado
    governos = df_grafico1['governo'].unique()
    governo_selecionado = st.selectbox('Selecione um governo:', options=['Todos'] + list(governos))

    #filtrando os dados pelo ano selecionado
    if governo_selecionado != 'Todos':
        df_grafico1 = df_grafico1[df_grafico1['governo'] == governo_selecionado]

col1, col2 = st.columns(2)

#Primeiro gr√°fico -----------------------------------------------------------------------
grupo_uf = df_grafico1.groupby('state')['delta_areakm'].sum().reset_index()
grupo_uf = grupo_uf.sort_values(by=['delta_areakm'])

# Usando a primeira coluna para o gr√°fico
with col1:
    fig1, ax1 = plt.subplots(figsize=(6, 5))
    ax1.barh(grupo_uf['state'], grupo_uf['delta_areakm'])
    plt.title('Total Incremento de Desmatamento por Estado', fontsize=15)
    plt.xlabel('√Årea em Kms')
    #plt.ylabel('Total de Queimadas')
    plt.ticklabel_format(style='plain', axis='x')
    plt.tight_layout()
    st.pyplot(fig1)
    
#Segundo gr√°fico -----------------------------------------------------------------------
    
#agrupando os dados pelo m√™s e calculando a soma do campo 'focuses'
# grouped_df = df_grafico1.groupby('governo')['areakm'].sum().reset_index()

# #criando uma nova figura para o gr√°fico
# fig2 = plt.figure(figsize=(6,5))

# #criando um gr√°fico de barras
# sns.barplot(x=grouped_df['governo'], y=grouped_df['areakm'], color='blue')

# #usando a primeira coluna para o gr√°fico
# with col2:
#     fig2, ax2 = plt.subplots(figsize=(6, 5))
#     ax2.bar(grouped_df['governo'], grouped_df['areakm'])
#     plt.title('Total Desmatamentos por Ano', fontsize=15)
#     plt.xlabel('M√™s')
#     plt.tight_layout()
#     st.pyplot(fig2)
    

#Terceiro gr√°fico -----------------------------------------------------------------------

#agrupando os dados pela data e calcule a soma do campo 'focuses'
with col2:
    df_grafico1['year_tratado'] = df_grafico1['year'].astype(str).str.slice(-2)
    grouped_df = df_grafico1.groupby('year_tratado')['delta_areakm'].sum().reset_index()
    grouped_df = grouped_df[grouped_df['year_tratado'] != '07']

    #definindo o estilo Seaborn
    sns.set_theme()

    #cria um gr√°fico de linha
    fig3, ax3 = plt.subplots(figsize=(6,5))
    ax3.plot_date(grouped_df['year_tratado'], grouped_df['delta_areakm'], linestyle='solid', color='blue')
    ax3.set_title('Hist√≥rico Incremento de Desmatamento por Ano', fontsize=15)
    plt.tight_layout()
    st.pyplot(fig3)
    

#df_grafico1['year_tratado'] = df_grafico1['year'].astype(str).str.slice(-2)
grouped_df = df_grafico1.groupby('governo')['delta_areakm'].sum().reset_index()
#grouped_df = grouped_df[grouped_df['year_tratado'] != '07']

#definindo o estilo Seaborn
sns.set_theme()

# Criando um dicion√°rio com cores para cada governo
cores = {'Lula': 'red', 'Dilma1': 'pink','Dilma2': 'orange', 'Temer': 'gray', 'Bolsonaro': 'green'}


# Ordenando o DataFrame pela ordem desejada
order = ['Lula', 'Dilma1', 'Dilma2', 'Temer', 'Bolsonaro']
grouped_df['governo'] = pd.Categorical(grouped_df['governo'], categories=order, ordered=True)
grouped_df = grouped_df.sort_values('governo')

# Criando um gr√°fico de barras
fig3, ax3 = plt.subplots(figsize=(10,6))
barras = ax3.bar(grouped_df['governo'], grouped_df['delta_areakm'], color=[cores[i] for i in grouped_df['governo']])
ax3.set_title('Hist√≥rico Incremento de Desmatamento por Governo', fontsize=15)

# Adicionando r√≥tulos nas barras
for bar in barras:
    yval = bar.get_height()
    ax3.text(bar.get_x() + bar.get_width()/2, yval, int(yval), ha='center', va='bottom')

plt.tight_layout()
st.pyplot(fig3)


#texto
st.markdown("""Alguns pontos chamam muito aten√ß√£o nestes gr√°ficos. O primeiro √© a representatividade do Par√° nos incrementos de √°reas desmatadas. De fato ele √© o segundo estado que mais abrange a √°rea da Amaz√¥nia Legal, mas ele possui mais do que o triplo de √°rea desmatada do Amazonas, que √© o estado que mais possui √°rea da Amaz√¥nia Legal. Isso provavelmente se deve a facilidade de explora√ß√£o no estado do Par√° em compara√ß√£o com o Amazonas, por conta do maior desenvolvimento da regi√£o.
            
Outro ponto de destaque √© a evolu√ß√£o de √°rea desmatada ao longo do tempo. Percebemos um pico de incremento em 2008, no governo Lula, e depois disso tivemos seguidos anos de queda at√© 2012, quando os n√∫meros come√ßaram a crescer de forma mais t√≠mida no segundo ano de governo da Dilma. Este ritmo se repetiu durante alguns anos.
            
Com o Temer os n√∫meros se estabilizaram. E a partir de 2019, com o governo Bolsonaro, houve um n√≠tido aumento agressivo dos incrementos de desmatamento. Tanto que se somarmos os incrementos do governo Dilma com os de Temer, ficamos apenas um pouco acima dos n√∫meros que tivemos no governo de Bolsonaro. Ou seja, o que perdemos de Amaz√¥nia Legal em um per√≠odo de 8 anos com Dilma e Temer foi praticamente o mesmo que perdemos em 4 anos de mandato de Bolsonaro.""")

# #2¬∫ Bloco************************************************************************************************************************
st.subheader("An√°lises dos n√∫meros dos Estados por Governo Presidencial")



# Agrupar os dados por estado e governo
grouped_df = df.groupby(['state', 'governo'])['delta_areakm'].sum().reset_index()

# Reorganizando os dados para o formato que o matplotlib precisa para barras empilhadas
grouped_df_pivot = grouped_df.pivot(index='state', columns='governo', values='delta_areakm').reset_index()
grouped_df_pivot = grouped_df_pivot.set_index('state')

# Definindo o estilo Seaborn
sns.set_theme()

# Definindo as cores para cada governo
cores = {'Lula': 'red', 'Dilma1': 'pink','Dilma2': 'orange', 'Temer': 'gray', 'Bolsonaro': 'green'}

# Criando o gr√°fico de barras empilhadas
fig3, ax3 = plt.subplots(figsize=(10,6))
grouped_df_pivot.loc[:, order].plot(kind='bar', stacked=True, color=[cores[i] for i in order], ax=ax3)
ax3.set_title('Representatividade de cada Governo no Desmatamento por Estado', fontsize=15)
plt.tight_layout()

# Mostrar o gr√°fico
st.pyplot(fig3)


#texto
st.markdown("""Acima podemos observar a representativade que o governo de Bolsonaro teve nos incrementos de cada Estado. Em praticamente todos os estados ele teve a maior parcela de incremento em rela√ß√£o a outros governos, com exce√ß√£o do Maranh√£o.""")

# 3¬∫ Bloco************************************************************************************************************************


#Proje√£o Lula

# #texto
st.subheader("Modelo preditivo")

st.markdown("Por fim, vamos projetar como ser√° o ano de 2023 com o Lula e como seria caso Bolsonaro fosse eleito.")


if st.button("Projetar"):
    df_projecao_aux = df.copy()
    df_projecao = df_projecao_aux[['municipality','geocode_ibge','state','governo']].drop_duplicates()
    df_projecao = df_projecao.drop(columns=['governo'])
    df_projecao['year'] = 2023
    df_projecao['governo_Lula'] = 1
    df_projecao['governo_Dilma'] = 0
    df_projecao['governo_Temer'] = 0
    df_projecao['governo_Bolsonaro'] = 0
    df_projecao_dummies = pd.get_dummies(df_projecao, columns=['state', 'municipality'])
    
    
    

    #url = 'https://drive.google.com/uc?export=download&id=1pqnJpGAkOlPucPYSMvT2rcdQPM1PId8-'
    #output = 'pycaret_mdl_rf.pkl'
    #gdown.download(url, output, quiet=False)
    #mdl_et = load_model('pycaret_mdl_rf')
    mdl_xgboost = load_model('./pycaret_mdl_xg')
    xgboost_model = mdl_xgboost.named_steps['trained_model']

    ypred = predict_model( xgboost_model, data = df_projecao_dummies)
    df_projecao_dummies['delta_areakm'] = ypred['prediction_label']


    # Agrupa os dados por ano e soma os valores de 'areakm'
    df_projecao_dummies = df_projecao_dummies.drop_duplicates()
    df_projecao_agrupado = df_projecao_dummies.groupby('year')['delta_areakm'].sum().reset_index()
    df_agrupado = df.groupby('year')['delta_areakm'].sum().reset_index()

    # Concatena os dois DataFrames
    comparativo_ano = pd.concat([df_agrupado, df_projecao_agrupado], ignore_index=True)
    comparativo_ano = comparativo_ano[comparativo_ano['year'] != 2007]
    # Cria o gr√°fico de barras
    fig8, ax8 = plt.subplots(figsize=(10,6))

    # Define a largura das barras
    bar_width = 0.2

    # Define uma cor padr√£o e uma cor destacada
    default_color = 'blue'
    highlight_color = 'red'

    # Cria o gr√°fico para cada ano
    for i, ano in enumerate(comparativo_ano['year'].unique()):
        df_ano = comparativo_ano[comparativo_ano['year'] == ano]
        # Adiciona um valor constante ao argumento `x` do m√©todo `bar` para ajustar a posi√ß√£o das barras
        bars = ax8.bar(i + bar_width, df_ano['delta_areakm'], width=bar_width, 
                       color=highlight_color if ano == 2023 else default_color)

        # Adiciona r√≥tulos nas barras
        for bar in bars:
            yval = bar.get_height()
            ax8.text(bar.get_x() + bar.get_width()/2, yval, int(yval), ha='center', va='bottom')

    # Legendas e t√≠tulos
    ax8.set_xlabel('Ano')
    ax8.set_ylabel('√Årea desmatada (km¬≤)')
    ax8.set_title('Desmatamento por ano')

    # Ajusta os ticks do eixo X para corresponderem ao meio das barras e define os r√≥tulos dos ticks como os anos
    ax8.set_xticks(np.arange(len(comparativo_ano['year'].unique())) + bar_width)
    ax8.set_xticklabels(comparativo_ano['year'].unique())

    plt.tight_layout()
    st.pyplot(fig8)

    st.markdown("A proje√ß√£o indica que este primeiro ano de governo Lula ir√° trazer os n√∫meros de incremento de desmatamento para patamares um pouco menores do que o primeiro ano do governo Bolsonaro. Agora vamos avaliar como seria a proje√ß√£o caso o Bolsonaro tivesse sido eleito para este ano.")



    #Proje√£o Bolsonaro

    # #texto
    #st.subheader("Modelo preditivo")

    df_projecao_aux = df.copy()
    df_projecao = df_projecao_aux[['municipality','geocode_ibge','state','governo']].drop_duplicates()
    df_projecao = df_projecao.drop(columns=['governo'])

    df_projecao['year'] = 2023
    df_projecao['governo_Lula'] = 0
    df_projecao['governo_Dilma'] = 0
    df_projecao['governo_Temer'] = 0
    df_projecao['governo_Bolsonaro'] = 1

    df_projecao_dummies = pd.get_dummies(df_projecao, columns=['state', 'municipality'])

    # mdl_et = load_model('./pycaret_mdl_rf')
    # et_model = mdl_et.named_steps['trained_model']

    ypred = predict_model(xgboost_model, data = df_projecao_dummies)
    df_projecao_dummies['delta_areakm'] = ypred['prediction_label']


    # Agrupa os dados por ano e soma os valores de 'areakm'
    df_projecao_dummies = df_projecao_dummies.drop_duplicates()
    df_projecao_agrupado = df_projecao_dummies.groupby('year')['delta_areakm'].sum().reset_index()
    df_agrupado = df.groupby('year')['delta_areakm'].sum().reset_index()

    # Concatena os dois DataFrames
    comparativo_ano = pd.concat([df_agrupado, df_projecao_agrupado], ignore_index=True)
    comparativo_ano = comparativo_ano[comparativo_ano['year'] != 2007]
    # Cria o gr√°fico de barras
    fig8, ax8 = plt.subplots(figsize=(10,6))

    # Define a largura das barras
    bar_width = 0.2

    # Define uma cor padr√£o e uma cor destacada
    default_color = 'blue'
    highlight_color = 'red'

    # Cria o gr√°fico para cada ano
    for i, ano in enumerate(comparativo_ano['year'].unique()):
        df_ano = comparativo_ano[comparativo_ano['year'] == ano]
        # Adiciona um valor constante ao argumento `x` do m√©todo `bar` para ajustar a posi√ß√£o das barras
        bars = ax8.bar(i + bar_width, df_ano['delta_areakm'], width=bar_width, 
                       color=highlight_color if ano == 2023 else default_color)

        # Adiciona r√≥tulos nas barras
        for bar in bars:
            yval = bar.get_height()
            ax8.text(bar.get_x() + bar.get_width()/2, yval, int(yval), ha='center', va='bottom')

    # Legendas e t√≠tulos
    ax8.set_xlabel('Ano')
    ax8.set_ylabel('√Årea desmatada (km¬≤)')
    ax8.set_title('Desmatamento por ano')

    # Ajusta os ticks do eixo X para corresponderem ao meio das barras e define os r√≥tulos dos ticks como os anos
    ax8.set_xticks(np.arange(len(comparativo_ano['year'].unique())) + bar_width)
    ax8.set_xticklabels(comparativo_ano['year'].unique())

    plt.tight_layout()
    st.pyplot(fig8)

    st.markdown("A princip√≠o esta proje√ß√£o gera estranhamento j√° que o esperado seria um cont√≠nuo aumento do que vinhamos tendo nos governos anteriores de Bolsonaro, considerando a pouca import√¢ncia que a pauta de desmatamento teve ao longo do governo e os aumentos sucessivos de incrementos a cada ano. Contudo, o modelo n√£o considera apenas a vari√°vel de quem √© o presidente mas tamb√©m o comportamento hist√≥rico dos incrementos. E se notarmos ao longo dos anos n√£o tivemos nenhum per√≠odo com 4 anos de aumento consecutivo, portanto, o valor apresentado pode indicar apenas um leve recuo para a proje√ß√£o se moldar de um modo que fa√ßa mais sentido a curva hist√≥rica. ")








    

        
